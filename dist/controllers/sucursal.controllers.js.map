{"version":3,"sources":["../../src/controllers/sucursal.controllers.js"],"names":["getAll","req","res","Sucursal","find","sort","name","objeto","length","json","status","message","console","log","getSucursalById","sucursalId","params","findById","getSucursalByActivo","createSucursal","body","nuevo","save","updateSucursal","findByIdAndUpdate","deleteSucursal","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Sucursal from '../models/Sucursal'\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const objeto = await Sucursal.find().sort({ name: 'asc' })\r\n        if (objeto.length > 0) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Sucursal' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSucursalById = async(req, res) => {\r\n    const { sucursalId } = req.params\r\n    try {\r\n        const objeto = await Sucursal.findById(sucursalId)\r\n        if (objeto) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Sucursal' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSucursalByActivo = async(req, res) => {\r\n    try {\r\n        const objeto = await Sucursal.find({ status: true }).sort({ name: 'asc' })\r\n        if (objeto.length > 0) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Sucursales Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createSucursal = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const nuevo = new Sucursal({ name, status })\r\n        const objeto = await nuevo.save()\r\n        if (objeto) {\r\n            res.json({ message: 'Sucursal creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateSucursal = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { sucursalId } = req.params;\r\n    try {\r\n        const objeto = await Sucursal.findByIdAndUpdate(sucursalId, { name, status })\r\n        if (objeto) {\r\n            res.json({ message: 'Sucursal actualizada con éxito' })\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Sucursal a actualizar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteSucursal = async(req, res) => {\r\n    const { sucursalId } = req.params;\r\n    try {\r\n        const objeto = await Sucursal.findByIdAndDelete(sucursalId)\r\n        if (objeto) {\r\n            res.json({ message: 'Sucursal eliminado con éxito' })\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Sucursal a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"sucursal.controllers.js"}