{"version":3,"sources":["../../src/controllers/compliance.controller.js"],"names":["cumplimientoCtrl","getAll","req","res","Compliance","find","query","length","json","status","message","console","error","getOne","complianceId","params","findById","encontrado","createCumplimiento","body","asesor_venta","nro_asignados","nro_atendidos","nro_vendidos","meta_asignados","meta_atendidos","meta_vendidos","sucursal","anio","mes","userCreator","nuevoObjeto","Seller","name","asesorFound","map","a","_id","User","username","creador","b","save","eliminarCumpimiento","findByIdAndRemove","getCountAll","countDocuments","nro_registros","getByAsesor","asesor","findOne","asesorEncontrado","where","registros","getCumplimientosxFecha","start","end","fecha","$gte","Date","$lte"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,gBAAgB,GAAG,EAAzB;;AAEAA,gBAAgB,CAACC,MAAjB;AAAA,2FAA0B,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEEC,uBAAWC,IAAX,EAFF;;AAAA;AAEZC,YAAAA,KAFY;;AAAA,kBAIdA,KAAK,CAACC,MAAN,GAAe,CAJD;AAAA;AAAA;AAAA;;AAKdJ,YAAAA,GAAG,CAACK,IAAJ,CAASF,KAAT;AALc;AAAA;;AAAA;AAAA,6CAOPH,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAArB,CAPO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUlBC,YAAAA,OAAO,CAACC,KAAR;AAVkB,6CAWXT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,YAAIA;AAAf,aAArB,CAXW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAeAV,gBAAgB,CAACa,MAAjB;AAAA,4FAA0B,kBAAMX,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACdW,YAAAA,YADc,GACGZ,GAAG,CAACa,MADP,CACdD,YADc;AAAA;AAAA;AAAA,mBAGEV,uBAAWY,QAAX,CAAoBF,YAApB,CAHF;;AAAA;AAGZR,YAAAA,KAHY;;AAAA,iBAKdA,KALc;AAAA;AAAA;AAAA;;AAMdH,YAAAA,GAAG,CAACK,IAAJ,CAAS;AAAES,cAAAA,UAAU,EAAEX;AAAd,aAAT;AANc;AAAA;;AAAA;AAAA,8CAQPH,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAArB,CARO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYlBC,YAAAA,OAAO,CAACC,KAAR;AAZkB,8CAaXT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAbW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAiBAV,gBAAgB,CAACkB,kBAAjB;AAAA,4FAAsC,kBAAMhB,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACoHD,GAAG,CAACiB,IADxH,EAC1BC,YAD0B,aAC1BA,YAD0B,EACZC,aADY,aACZA,aADY,EACGC,aADH,aACGA,aADH,EACkBC,YADlB,aACkBA,YADlB,EACgCC,cADhC,aACgCA,cADhC,EACgDC,cADhD,aACgDA,cADhD,EACgEC,aADhE,aACgEA,aADhE,EAC+EC,QAD/E,aAC+EA,QAD/E,EACyFC,IADzF,aACyFA,IADzF,EAC+FC,GAD/F,aAC+FA,GAD/F,EACoGC,WADpG,aACoGA,WADpG;AAAA;AAIxBC,YAAAA,WAJwB,GAIV,IAAI3B,sBAAJ,CAAe;AAC/BiB,cAAAA,aAAa,EAAbA,aAD+B;AAE/BC,cAAAA,aAAa,EAAbA,aAF+B;AAG/BC,cAAAA,YAAY,EAAZA,YAH+B;AAI/BC,cAAAA,cAAc,EAAdA,cAJ+B;AAK/BC,cAAAA,cAAc,EAAdA,cAL+B;AAM/BC,cAAAA,aAAa,EAAbA,aAN+B;AAO/BC,cAAAA,QAAQ,EAARA,QAP+B;AAQ/BC,cAAAA,IAAI,EAAJA,IAR+B;AAS/BC,cAAAA,GAAG,EAAHA;AAT+B,aAAf,CAJU;AAAA;AAAA,mBAgBJG,mBAAO3B,IAAP,CAAY;AAAE4B,cAAAA,IAAI,EAAEb;AAAR,aAAZ,CAhBI;;AAAA;AAgBxBc,YAAAA,WAhBwB;AAiB9BH,YAAAA,WAAW,CAACX,YAAZ,GAA2Bc,WAAW,CAACC,GAAZ,CAAgB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,GAAN;AAAA,aAAjB,CAA3B;AAjB8B;AAAA,mBAmBRC,iBAAKjC,IAAL,CAAU;AAAEkC,cAAAA,QAAQ,EAAET;AAAZ,aAAV,CAnBQ;;AAAA;AAmBxBU,YAAAA,OAnBwB;AAoB9BT,YAAAA,WAAW,CAACD,WAAZ,GAA0BU,OAAO,CAACL,GAAR,CAAY,UAAAM,CAAC;AAAA,qBAAIA,CAAC,CAACJ,GAAN;AAAA,aAAb,CAA1B;AApB8B;AAAA,mBAsBVN,WAAW,CAACW,IAAZ,EAtBU;;AAAA;AAsBxBpC,YAAAA,KAtBwB;;AAwB9B,gBAAIA,KAAJ,EAAW;AACPH,cAAAA,GAAG,CAACK,IAAJ,CAAS;AAAEE,gBAAAA,OAAO,EAAE;AAAX,eAAT;AACH;;AA1B6B;AAAA;;AAAA;AAAA;AAAA;AA4B9BC,YAAAA,OAAO,CAACC,KAAR;AA5B8B,8CA6BvBT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CA7BuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AAkCAV,gBAAgB,CAAC2C,mBAAjB;AAAA,4FAAuC,kBAAMzC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BW,YAAAA,YAD2B,GACVZ,GAAG,CAACa,MADM,CAC3BD,YAD2B;AAAA;AAAA;AAAA,mBAGXV,uBAAWwC,iBAAX,CAA6B9B,YAA7B,CAHW;;AAAA;AAGzBR,YAAAA,KAHyB;;AAAA,iBAK3BA,KAL2B;AAAA;AAAA;AAAA;;AAM3BH,YAAAA,GAAG,CAACK,IAAJ,CAAS;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAAT;AAN2B;AAAA;;AAAA;AAAA,8CAQpBP,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAArB,CARoB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAW/BC,YAAAA,OAAO,CAACC,KAAR;AAX+B,8CAYxBT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAZwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAAA;AAAA;AAAA;AAAA;;AAgBAV,gBAAgB,CAAC6C,WAAjB;AAAA,4FAA+B,kBAAM3C,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEHC,uBAAW0C,cAAX,EAFG;;AAAA;AAEjBxC,YAAAA,KAFiB;;AAAA,kBAInBA,KAAK,GAAG,CAJW;AAAA;AAAA;AAAA;;AAAA,8CAIDH,GAAG,CAACK,IAAJ,CAAS;AAAEuC,cAAAA,aAAa,EAAEzC;AAAjB,aAAT,CAJC;;AAAA;AAAA,kBAKnBA,KAAK,IAAI,CALU;AAAA;AAAA;AAAA;;AAAA,8CAKAH,GAAG,CAACK,IAAJ,CAAS;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAAT,CALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOvBC,YAAAA,OAAO,CAACC,KAAR;AAPuB,8CAQhBT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CARgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAYAV,gBAAgB,CAACgD,WAAjB;AAAA,4FAA+B,kBAAM9C,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB8C,YAAAA,MADmB,GACR/C,GAAG,CAACiB,IADI,CACnB8B,MADmB;AAAA;AAAA;AAAA,mBAIQjB,mBAAOkB,OAAP,CAAe;AAAEjB,cAAAA,IAAI,EAAEgB;AAAR,aAAf,CAJR;;AAAA;AAIjBE,YAAAA,gBAJiB;;AAAA,gBAMlBA,gBANkB;AAAA;AAAA;AAAA;;AAAA,8CAMOhD,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAArB,CANP;;AAAA;AAAA;AAAA,mBAQHN,uBAAWgD,KAAX,CAAiB;AAAEhC,cAAAA,YAAY,EAAE+B,gBAAgB,CAACd;AAAjC,aAAjB,EAAyDhC,IAAzD,EARG;;AAAA;AAQjBC,YAAAA,KARiB;;AAAA,kBAUnBA,KAAK,CAACC,MAAN,GAAe,CAVI;AAAA;AAAA;AAAA;;AAWnBJ,YAAAA,GAAG,CAACK,IAAJ,CAAS;AAAEuC,cAAAA,aAAa,EAAEzC,KAAK,CAACC,MAAvB;AAA+B8C,cAAAA,SAAS,EAAE/C;AAA1C,aAAT;AAXmB;AAAA;;AAAA;AAAA,8CAaZH,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAArB,CAbY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBvBC,YAAAA,OAAO,CAACC,KAAR;AAhBuB,8CAiBhBT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAjBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAqBAV,gBAAgB,CAACsD,sBAAjB;AAAA,4FAA0C,kBAAMpD,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACLD,GAAG,CAACiB,IADC,EAC9BQ,QAD8B,cAC9BA,QAD8B,EACpB4B,KADoB,cACpBA,KADoB,EACbC,GADa,cACbA,GADa;AAAA;AAAA;AAAA,mBAIdpD,uBAAWgD,KAAX,CAAiB;AAAEzB,cAAAA,QAAQ,EAARA,QAAF;AAAY8B,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASJ,KAAT,CAAR;AAAyBK,gBAAAA,IAAI,EAAE,IAAID,IAAJ,CAASH,GAAT;AAA/B;AAAnB,aAAjB,EAAsFnD,IAAtF,EAJc;;AAAA;AAI5BC,YAAAA,KAJ4B;;AAAA,kBAM9BA,KAAK,CAACC,MAAN,GAAe,CANe;AAAA;AAAA;AAAA;;AAO9BJ,YAAAA,GAAG,CAACK,IAAJ,CAAS;AAAEuC,cAAAA,aAAa,EAAEzC,KAAK,CAACC,MAAvB;AAA+B8C,cAAAA,SAAS,EAAE/C;AAA1C,aAAT;AAP8B;AAAA;;AAAA;AAAA,8CASvBH,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,gCAAyBiB,QAAzB;AAAT,aAArB,CATuB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYlChB,YAAAA,OAAO,CAACC,KAAR;AAZkC,8CAa3BT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAb2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1C;;AAAA;AAAA;AAAA;AAAA;;eAiBeV,gB","sourcesContent":["import Compliance from \"../models/Compliance\";\r\nimport Seller from '../models/Seller'\r\nimport User from '../models/User'\r\n\r\nconst cumplimientoCtrl = {};\r\n\r\ncumplimientoCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Compliance.find();\r\n\r\n        if (query.length > 0) {\r\n            res.json(query)\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe tabla de Cumplimiento' })\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncumplimientoCtrl.getOne = async(req, res) => {\r\n    const { complianceId } = req.params\r\n    try {\r\n        const query = await Compliance.findById(complianceId);\r\n\r\n        if (query) {\r\n            res.json({ encontrado: query })\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el cumplimiento' })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncumplimientoCtrl.createCumplimiento = async(req, res) => {\r\n    const { asesor_venta, nro_asignados, nro_atendidos, nro_vendidos, meta_asignados, meta_atendidos, meta_vendidos, sucursal, anio, mes, userCreator } = req.body;\r\n\r\n    try {\r\n        const nuevoObjeto = new Compliance({\r\n            nro_asignados,\r\n            nro_atendidos,\r\n            nro_vendidos,\r\n            meta_asignados,\r\n            meta_atendidos,\r\n            meta_vendidos,\r\n            sucursal,\r\n            anio,\r\n            mes\r\n        })\r\n\r\n        const asesorFound = await Seller.find({ name: asesor_venta });\r\n        nuevoObjeto.asesor_venta = asesorFound.map(a => a._id);\r\n\r\n        const creador = await User.find({ username: userCreator });\r\n        nuevoObjeto.userCreator = creador.map(b => b._id);\r\n\r\n        const query = await nuevoObjeto.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Cumplimiento creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(503).json({ message: err.message })\r\n\r\n    }\r\n}\r\n\r\ncumplimientoCtrl.eliminarCumpimiento = async(req, res) => {\r\n    const { complianceId } = req.params;\r\n    try {\r\n        const query = await Compliance.findByIdAndRemove(complianceId);\r\n\r\n        if (query) {\r\n            res.json({ message: 'Cumplimiento eliminado con éxito' })\r\n        } else {\r\n            return res.status(404).json({ message: 'Cumplimiento no encontrado' })\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\ncumplimientoCtrl.getCountAll = async(req, res) => {\r\n    try {\r\n        const query = await Compliance.countDocuments();\r\n\r\n        if (query > 0) return res.json({ nro_registros: query })\r\n        if (query == 0) return res.json({ message: 'No existen registros' })\r\n    } catch (err) {\r\n        console.error(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncumplimientoCtrl.getByAsesor = async(req, res) => {\r\n    const { asesor } = req.body;\r\n\r\n    try {\r\n        const asesorEncontrado = await Seller.findOne({ name: asesor });\r\n\r\n        if (!asesorEncontrado) return res.status(404).json({ message: 'Asesor no encontrado' })\r\n\r\n        const query = await Compliance.where({ asesor_venta: asesorEncontrado._id }).find();\r\n\r\n        if (query.length > 0) {\r\n            res.json({ nro_registros: query.length, registros: query })\r\n        } else {\r\n            return res.status(404).json({ message: 'No cuenta con metas registradas ' })\r\n        }\r\n    } catch (err) {\r\n        console.error(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncumplimientoCtrl.getCumplimientosxFecha = async(req, res) => {\r\n    const { sucursal, start, end } = req.body;\r\n\r\n    try {\r\n        const query = await Compliance.where({ sucursal, fecha: { $gte: new Date(start), $lte: new Date(end) } }).find()\r\n\r\n        if (query.length > 0) {\r\n            res.json({ nro_registros: query.length, registros: query })\r\n        } else {\r\n            return res.status(404).json({ message: `No hay registros en ${sucursal} en esas fechas` })\r\n        }\r\n    } catch (err) {\r\n        console.error(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default cumplimientoCtrl;"],"file":"compliance.controller.js"}