{"version":3,"sources":["../../src/controllers/marca.controller.js"],"names":["getAll","req","res","Marca","find","sort","name","query","length","json","status","message","console","log","getMarcaById","marcaId","params","findById","getMarcaByActivo","createMarca","body","newMarca","save","updateMarca","findByIdAndUpdate","deleteMarca","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Marca from \"../models/Marca\";\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await Marca.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Marcas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getMarcaById = async(req, res) => {\r\n    const { marcaId } = req.params;\r\n    try {\r\n        const query = await Marca.findById(marcaId);\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Marca' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getMarcaByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Marca.find({ status: true }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Marcas Activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createMarca = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const newMarca = new Marca({ name, status });\r\n\r\n        const query = await newMarca.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Marca creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateMarca = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { marcaId } = req.params;\r\n    try {\r\n        const updateMarca = await Marca.findByIdAndUpdate(marcaId, { name, status });\r\n\r\n        if (updateMarca) {\r\n            res.json({ message: 'Marca actualizada con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Marca a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteMarca = async(req, res) => {\r\n    const { marcaId } = req.params;\r\n    try {\r\n        const deleteMarca = await Marca.findByIdAndDelete(marcaId);\r\n        if (deleteMarca) {\r\n            res.json({ message: 'Marca eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Marca a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"marca.controller.js"}