{"version":3,"sources":["../../src/controllers/seller.controller.js"],"names":["sellerCtrl","getAll","req","res","Seller","find","sort","name","populate","path","select","query","length","json","total_sellers","all_sellers","status","message","console","error","getOne","sellerId","params","findById","seller","createSeller","body","document","cellphone","email","tipo","marca","sucursal","createdBy","User","findOne","username","userFound","Marca","marcaFound","Sucursal","sucursalFound","obj","_id","save","updateSeller","findByIdAndUpdate","deleteSeller","findByIdAndRemove","getCountAll","countDocuments","total_count","getSellersByActive","total_actives","active_actives","getSellersBySucursal","match","filter","a","total","deploy","updatePhoto","avatar","file","location"],"mappings":"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","sourcesContent":["import Seller from \"../models/Seller\";\r\nimport User from \"../models/User\";\r\nimport Marca from \"../models/Marca\";\r\nimport Sucursal from \"../models/Sucursal\";\r\n\r\nconst sellerCtrl = {};\r\n\r\nsellerCtrl.getAll = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Seller.find()\r\n\t\t\t.sort({ name: \"asc\" })\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"marca\",\r\n\t\t\t\tselect: \"name avatar\",\r\n\t\t\t})\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"sucursal\",\r\n\t\t\t\tselect: \"name\",\r\n\t\t\t})\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"createdBy\",\r\n\t\t\t\tselect: \"name username\",\r\n\t\t\t});\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({ total_sellers: query.length, all_sellers: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen Asesores de Ventas\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nsellerCtrl.getOne = async (req, res) => {\r\n\tconst { sellerId } = req.params;\r\n\ttry {\r\n\t\tconst query = await Seller.findById(sellerId)\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"marca\",\r\n\t\t\t\tselect: \"name avatar\",\r\n\t\t\t})\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"sucursal\",\r\n\t\t\t\tselect: \"name\",\r\n\t\t\t})\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"createdBy\",\r\n\t\t\t\tselect: \"name username\",\r\n\t\t\t});\r\n\t\tif (query) {\r\n\t\t\tres.json({ seller: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe el Asesor de Ventas\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nsellerCtrl.createSeller = async (req, res) => {\r\n\tconst { name, document, cellphone, email, tipo, marca, sucursal, status, createdBy } = req.body;\r\n\ttry {\r\n\t\tconst userFound = await User.findOne({ username: createdBy });\r\n\t\tif (!userFound) return res.status(404).json({ message: `No existe el usuario ${createdBy}` });\r\n\r\n\t\tconst marcaFound = await Marca.findOne({ name: marca });\r\n\t\tif (!marcaFound) return res.status(404).json({ message: `No existe la marca ${marca}` });\r\n\r\n\t\tconst sucursalFound = await Sucursal.findOne({ name: sucursal });\r\n\t\tif (!sucursalFound) return res.status(404).json({ message: `No existe la sucursal ${sucursal}` });\r\n\r\n\t\tconst obj = new Seller({\r\n\t\t\tname,\r\n\t\t\tdocument,\r\n\t\t\tcellphone,\r\n\t\t\temail,\r\n\t\t\ttipo,\r\n\t\t\tstatus,\r\n\t\t});\r\n\t\tobj.marca = marcaFound._id;\r\n\t\tobj.sucursal = sucursalFound._id;\r\n\t\tobj.createdBy = userFound._id;\r\n\r\n\t\tconst query = await obj.save();\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Asesor de Ventas creado con éxito\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nsellerCtrl.updateSeller = async (req, res) => {\r\n\tconst { sellerId } = req.params;\r\n\tconst { name, document, cellphone, email, tipo, marca, sucursal, status } = req.body;\r\n\ttry {\r\n\t\tconst marcaFound = await Marca.findOne({ name: marca });\r\n\t\tconst sucursalFound = await Sucursal.findOne({ name: sucursal });\r\n\r\n\t\tif (!marcaFound) return res.status(404).json({ message: `No existe la marca ${marca}` });\r\n\t\tif (!sucursalFound) return res.status(404).json({ message: `No existe la sucursal ${sucursal}` });\r\n\r\n\t\tconst query = await Seller.findByIdAndUpdate(sellerId, {\r\n\t\t\tname,\r\n\t\t\tdocument,\r\n\t\t\tcellphone,\r\n\t\t\temail,\r\n\t\t\ttipo,\r\n\t\t\tmarca: marcaFound._id,\r\n\t\t\tsucursal: sucursalFound._id,\r\n\t\t\tstatus,\r\n\t\t});\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Asesor de Ventas actualizado con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"Asesor de Ventas no encontrado\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nsellerCtrl.deleteSeller = async (req, res) => {\r\n\tconst { sellerId } = req.params;\r\n\ttry {\r\n\t\tconst query = await Seller.findByIdAndRemove(sellerId);\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Asesor de Ventas eliminado con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"Asesor de Ventas no encontrado\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nsellerCtrl.getCountAll = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Seller.countDocuments();\r\n\r\n\t\tif (query >= 0) {\r\n\t\t\tres.json({ total_count: query });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nsellerCtrl.getSellersByActive = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Seller.find({ status: true })\r\n\t\t\t.sort({ name: \"asc\" })\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"marca\",\r\n\t\t\t\tselect: \"name avatar\",\r\n\t\t\t})\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"sucursal\",\r\n\t\t\t\tselect: \"name\",\r\n\t\t\t})\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"createdBy\",\r\n\t\t\t\tselect: \"name username\",\r\n\t\t\t});\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({ total_actives: query.length, active_actives: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen Asesores de Ventas Activos\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nsellerCtrl.getSellersBySucursal = async (req, res) => {\r\n\tconst { sucursal } = req.body;\r\n\ttry {\r\n\t\tconst query = await Seller.find()\r\n\t\t\t.sort({ name: \"asc\" })\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"marca\",\r\n\t\t\t\tselect: \"name avatar\",\r\n\t\t\t})\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"sucursal\",\r\n\t\t\t\tselect: \"name\",\r\n\t\t\t\tmatch: { name: sucursal },\r\n\t\t\t})\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"createdBy\",\r\n\t\t\t\tselect: \"name username\",\r\n\t\t\t});\r\n\r\n\t\tconst obj = query.filter((a) => a.sucursal);\r\n\r\n\t\tif (obj.length > 0) {\r\n\t\t\tres.json({ total: obj.length, deploy: obj });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: `No existen Asesores de Ventas en ${sucursal}` });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nsellerCtrl.updatePhoto = async (req, res) => {\r\n\tconst { sellerId } = req.params;\r\n\tconst avatar = req.file;\r\n\r\n\ttry {\r\n\t\tconst query = await Seller.findByIdAndUpdate(sellerId, {\r\n\t\t\tavatar: avatar.location,\r\n\t\t});\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Foto de Vendedor subida con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"Vendedor no encontrado\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nexport default sellerCtrl;\r\n"],"file":"seller.controller.js"}