{"version":3,"sources":["../../src/controllers/vehicle.controller.js"],"names":["vehicleCtrl","createVehicle","req","res","body","marca","cod_tdp","categoria","modelo","version","userCreator","newVehicle","Vehicle","User","find","username","$in","foundEmployee","map","em","_id","save","vehicleSaved","json","message","console","log","status","getVehicles","sort","vehicles","length","getVehicleById","vehicleId","params","findById","vehicle","getVehicleByCodigo","codigoAuto","findOne","query","getVehiculeByMarca","getVehiculeByModelo","updateVehicleById","findByIdAndUpdate","updatedVehicle","deleteVehicleById","findByIdAndDelete","deletedVehicle","getCountAll","Customer","estimatedDocumentCount","nro_customer","error"],"mappings":"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","sourcesContent":["import Vehicle from '../models/Vehicle'\r\nimport User from '../models/User'\r\n\r\nconst vehicleCtrl = {}\r\n\r\nvehicleCtrl.createVehicle = async(req, res) => {\r\n    const { marca, cod_tdp, categoria, modelo, version, userCreator } = req.body;\r\n\r\n    try {\r\n        const newVehicle = new Vehicle({ marca, cod_tdp, categoria, modelo, version });\r\n\r\n        const foundEmployee = await User.find({ username: { $in: userCreator } });\r\n        newVehicle.userCreator = foundEmployee.map(em => em._id);\r\n\r\n        const vehicleSaved = await newVehicle.save();\r\n\r\n        if (vehicleSaved) {\r\n            res.json({ message: 'Vehículo creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n\r\n}\r\n\r\nvehicleCtrl.getVehicles = async(req, res) => {\r\n    try {\r\n        const vehicles = await Vehicle.find().sort({ cod_tdp: 'asc' });\r\n\r\n        if (vehicles.length > 0) {\r\n            res.json(vehicles);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen vehículos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nvehicleCtrl.getVehicleById = async(req, res) => {\r\n    const { vehicleId } = req.params;\r\n    try {\r\n        const vehicle = await Vehicle.findById(vehicleId);\r\n        if (vehicle) {\r\n            res.json(vehicle);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Vehículo' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nvehicleCtrl.getVehicleByCodigo = async(req, res) => {\r\n    const { codigoAuto } = req.body;\r\n    try {\r\n        const query = await Vehicle.findOne({ cod_tdp: codigoAuto });\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe vehículo a mostrar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nvehicleCtrl.getVehiculeByMarca = async(req, res) => {\r\n    const { marca } = req.body;\r\n    try {\r\n        const query = await Vehicle.find({ marca });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Vehículos en esa Marca' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nvehicleCtrl.getVehiculeByModelo = async(req, res) => {\r\n    const { modelo } = req.body;\r\n    try {\r\n        const query = await Vehicle.find({ modelo });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Vehículos en ese Modelo' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nvehicleCtrl.updateVehicleById = async(req, res) => {\r\n    const { vehicleId } = req.params;\r\n    const { marca, cod_tdp, categoria, modelo, version } = req.body;\r\n\r\n    try {\r\n        const updatedVehicle = await Vehicle.findByIdAndUpdate(vehicleId, { marca, cod_tdp, categoria, modelo, version });\r\n        if (updatedVehicle) {\r\n            res.json({ message: 'Vehículo actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Vehículo a actualizar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nvehicleCtrl.deleteVehicleById = async(req, res) => {\r\n    const { vehicleId } = req.params;\r\n    try {\r\n        const deletedVehicle = await Vehicle.findByIdAndDelete(vehicleId);\r\n        if (deletedVehicle) {\r\n            res.json({ message: 'Vehículo eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Vehículo a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nvehicleCtrl.getCountAll = async(req, res) => {\r\n    try {\r\n        const query = await Customer.estimatedDocumentCount()\r\n\r\n        if (query >= 0) {\r\n            res.json({ nro_customer: query })\r\n        }\r\n    } catch (err) {\r\n        console.error(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default vehicleCtrl;"],"file":"vehicle.controller.js"}