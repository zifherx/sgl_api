{"version":3,"sources":["../../src/controllers/chasis.controller.js"],"names":["getAll","req","res","Chasis","find","sort","name","objeto","length","json","status","message","console","log","getChasisById","chasisId","params","findById","getChasisByActivo","createChasis","body","nuevo","save","updateChasis","findByIdAndUpdate","deleteChasis","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Chasis from '../models/Chasis'\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const objeto = await Chasis.find().sort({ name: 'asc' })\r\n        if (objeto.length > 0) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Chasis' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getChasisById = async(req, res) => {\r\n    const { chasisId } = req.params\r\n    try {\r\n        const objeto = await Chasis.findById(chasisId)\r\n        if (objeto) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Chasis' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getChasisByActivo = async(req, res) => {\r\n    try {\r\n        const objeto = await Chasis.find({ status: true }).sort({ name: 'asc' })\r\n        if (objeto.length > 0) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Chasis Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createChasis = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const nuevo = new Chasis({ name, status })\r\n        const objeto = await nuevo.save()\r\n        if (objeto) {\r\n            res.json({ message: 'Chasis creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateChasis = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { chasisId } = req.params;\r\n    try {\r\n        const objeto = await Chasis.findByIdAndUpdate(chasisId, { name, status })\r\n        if (objeto) {\r\n            res.json({ message: 'Chasis actualizado con éxito' })\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Chasis a actualizar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteChasis = async(req, res) => {\r\n    const { chasisId } = req.params;\r\n    try {\r\n        const objeto = await Chasis.findByIdAndDelete(chasisId)\r\n        if (objeto) {\r\n            res.json({ message: 'Chasis eliminado con éxito' })\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Chasis a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"chasis.controller.js"}