{"version":3,"sources":["../../src/controllers/auth.controller.js"],"names":["authCtrl","iniciarSesion","req","res","body","username","password","User","findOne","userFound","status","json","message","matchPassword","token","jwt","sign","id","_id","index","SECRET","expiresIn","findByIdAndUpdate","online","console","log","userCod","cambiarContrasena","locals","jwtPayload","oldPassword","newPassword","findById","encryptPassword","save","newObj","cerrarSesion","offline","forzarCierreSesion","idUser"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken'\r\nimport index from '../config'\r\nimport User from '../models/User'\r\n\r\nconst authCtrl = {}\r\n\r\nauthCtrl.iniciarSesion = async(req, res) => {\r\n    const { username, password } = req.body\r\n\r\n    const userFound = await User.findOne({ username })\r\n\r\n    if (!userFound) return res.status(404).json({ message: 'Usuario no existe' });\r\n\r\n    if (!userFound.status) return res.status(403).json({ message: 'Usuario Inactivo' });\r\n\r\n    // if (userFound.online) return res.status(401).json({ message: 'Usuario ya se encuentra logueado' });\r\n\r\n    const matchPassword = await User.matchPassword(password, userFound.password);\r\n\r\n    if (!matchPassword) return res.status(403).json({ token: null, message: 'Contraseña Errónea' });\r\n\r\n    const token = jwt.sign({ id: userFound._id }, index.SECRET, { expiresIn: '48h' });\r\n\r\n    //Cambio de estado a online\r\n    const online = await User.findByIdAndUpdate(userFound._id, { online: true });\r\n    console.log('Token:', token);\r\n\r\n    res.json({ token, userCod: userFound._id })\r\n}\r\n\r\nauthCtrl.cambiarContrasena = async(req, res) => {\r\n    const { id } = res.locals.jwtPayload;\r\n    const { oldPassword, newPassword } = req.body;\r\n\r\n    if (!(oldPassword && newPassword)) return res.status(409).json({ message: 'Contraseñas no coinciden' })\r\n\r\n    const userFound = await User.findById(id);\r\n\r\n    if (!userFound) return res.status(404).json({ message: 'Usuario no existe' })\r\n\r\n    const matchPassword = await User.matchPassword(oldPassword, userFound.password);\r\n    if (!matchPassword) return res.status(401).json({ token: null, message: 'Contraseña Errónea' })\r\n\r\n    try {\r\n        userFound.password = await User.encryptPassword(newPassword);\r\n        const newObj = await userFound.save();\r\n        if (newObj) res.json({ message: 'Contraseña actualizada con éxito' })\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nauthCtrl.cerrarSesion = async(req, res) => {\r\n    const { id } = res.locals.jwtPayload;\r\n\r\n    try {\r\n        const userFound = await User.findById(id);\r\n        if (!userFound.online) return res.status(401).json({ message: 'No existe sesión abierta' })\r\n        const offline = await User.findByIdAndUpdate(id, { online: false })\r\n        if (offline) return res.json({ message: 'Sesión cerrada con éxito' })\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nauthCtrl.forzarCierreSesion = async(req, res) => {\r\n    const { username } = req.body\r\n\r\n    try {\r\n        const userFound = await User.findOne({ username });\r\n        let idUser = userFound._id;\r\n        if (!userFound) return res.status(404).json({ message: 'Usuario no existe' })\r\n        if (!userFound.online) return res.status(400).json({ message: 'No existe sesión iniciada' })\r\n        const offline = await User.findByIdAndUpdate(idUser, { online: false });\r\n        if (offline) return res.json({ message: 'Se forzó el cierre de sesión' })\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport default authCtrl"],"file":"auth.controller.js"}