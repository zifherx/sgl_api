{"version":3,"sources":["../../src/controllers/motivoRechazo.controller.js"],"names":["rechazoController","getAll","req","res","MotivoRechazo","find","sort","name","populate","path","select","query","length","json","total","all","status","message","console","log","getOneById","motivoId","params","findById","one","getAllActivos","all_active","createOne","body","createdBy","User","findOne","username","userFound","obj","_id","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import MotivoRechazo from \"../models/MotivoRechazo\";\r\nimport User from \"../models/User\";\r\n\r\nconst rechazoController = {};\r\n\r\nrechazoController.getAll = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await MotivoRechazo.find()\r\n\t\t\t.sort({ name: \"asc\" })\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"createdBy\",\r\n\t\t\t\tselect: \"name username\",\r\n\t\t\t});\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({ total: query.length, all: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen motivos de rechazo\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nrechazoController.getOneById = async (req, res) => {\r\n\tconst { motivoId } = req.params;\r\n\ttry {\r\n\t\tconst query = await MotivoRechazo.findById(motivoId).populate({\r\n\t\t\tpath: \"createdBy\",\r\n\t\t\tselect: \"name username\",\r\n\t\t});\r\n\t\tif (query) {\r\n\t\t\tres.json({ one: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe motivo de rechazo\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nrechazoController.getAllActivos = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await MotivoRechazo.find({ status: true })\r\n\t\t\t.sort({ name: 1 })\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"createdBy\",\r\n\t\t\t\tselect: \"name username\",\r\n\t\t\t});\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({ total: query.length, all_active: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen motivos de rechazo activos\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nrechazoController.createOne = async (req, res) => {\r\n\tconst { name, status, createdBy } = req.body;\r\n\ttry {\r\n\t\tconst userFound = await User.findOne({ username: createdBy });\r\n\t\tconst obj = new MotivoRechazo({ name, status });\r\n\t\tobj.createdBy = userFound._id;\r\n\t\tconst query = await obj.save();\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Motivo de rechazo creado con éxito\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nrechazoController.updateOneById = async (req, res) => {\r\n\tconst { name, status } = req.body;\r\n\tconst { motivoId } = req.params;\r\n\ttry {\r\n\t\tconst query = await MotivoRechazo.findByIdAndUpdate(motivoId, { name, status });\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Motivo de rechazo actualizado con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe motivo de rechazo a actualizar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nrechazoController.deleteOneById = async (req, res) => {\r\n\tconst { motivoId } = req.params;\r\n\ttry {\r\n\t\tconst query = await MotivoRechazo.findByIdAndDelete(motivoId);\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Motivo de rechazo eliminado con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe motivo de rechazo a eliminar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nexport default rechazoController;"],"file":"motivoRechazo.controller.js"}