{"version":3,"sources":["../../src/middlewares/auth.jwt.js"],"names":["verifyToken","req","res","next","token","headers","status","json","message","decoded","jwt","verify","index","SECRET","locals","jwtPayload","userId","id","User","findById","password","userFound","console","log","isAdmin","user","Role","find","_id","$in","roles","i","length","name","isAsistente_Marketing","isMarketingyCallCenteryAdmin","isJefe_Ventas","isAsistente_CallcenterYAdmin","isAsistente_CallCenterAdminDigital"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken'\r\nimport index from '../config/index'\r\nimport User from '../models/User'\r\nimport Role from '../models/Role'\r\n\r\nexport const verifyToken = async(req, res, next) => {\r\n    try {\r\n        const token = req.headers['x-access-token'];\r\n\r\n        if (!token) return res.status(409).json({ message: 'Falta Token' })\r\n\r\n        const decoded = jwt.verify(token, index.SECRET)\r\n        res.locals.jwtPayload = decoded;\r\n        req.userId = decoded.id;\r\n        const id = req.userId;\r\n\r\n        const userFound = await User.findById(id, { password: 0 });\r\n\r\n        if (!userFound) return res.status(404).json({ message: 'No se encontró usuario' })\r\n\r\n        next()\r\n    } catch (err) {\r\n        console.log(err)\r\n        if (err.message == \"jwt expired\") {\r\n            return res.status(400).json({ message: 'Token ha expirado' });\r\n        } else if (err.message == \"invalid token\") {\r\n            return res.status(409).json({ message: 'Token inválido' })\r\n        } else {\r\n            return res.status(403).json({ message: 'No Autorizado' });\r\n        }\r\n    }\r\n}\r\n\r\nexport const isAdmin = async(req, res, next) => {\r\n\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Administrador') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(401).json({ message: 'Requiere permiso de Administrador' });\r\n}\r\n\r\nexport const isAsistente_Marketing = async(req, res, next) => {\r\n\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Asistente-Marketing') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(401).json({ message: 'Requiere permiso de Asistente-Marketing' });\r\n}\r\n\r\nexport const isMarketingyCallCenteryAdmin = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Asistente-Marketing' || roles[i].name === 'Asistente-Callcenter' || roles[i].name === 'Administrador') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(401).json({ message: 'Requiere permiso de Asistente-Marketing || Asistente-Callcenter' });\r\n}\r\n\r\nexport const isJefe_Ventas = async(req, res, next) => {\r\n\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Jefe-Ventas') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(401).json({ message: 'Requiere permiso de Jefe-Ventas' });\r\n}\r\n\r\nexport const isAsistente_CallcenterYAdmin = async(req, res, next) => {\r\n\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Asistente-Callcenter' || roles[i].name === 'Administrador') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(401).json({ message: 'Requiere permiso de Asistente-Callcenter || Administrador' });\r\n}\r\n\r\nexport const isAsistente_CallCenterAdminDigital = async(req, res, next) => {\r\n\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Asistente-Callcenter' || roles[i].name === 'Asistente-Marketing' || roles[i].name === 'Administrador' || roles[i].name === 'Asistente-Digital') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(401).json({ message: 'Requiere permiso de Asistente-Callcenter || Asistente-Marketing || Administrador || Asistente-Digital' });\r\n}"],"file":"auth.jwt.js"}