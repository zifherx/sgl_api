{"version":3,"sources":["../../src/libs/initialSetup.js"],"names":["createRoles","Role","countDocuments","nroRoles","Promise","all","name","description","save","registros","console","log","error","createAdminUser","User","nroUser","findOne","roleAdmin","encryptPassword","_id","username","password","email","sucursal","roles","registro"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEO,IAAMA,WAAW;AAAA,2FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEIC,iBAAKC,cAAL,EAFJ;;AAAA;AAEbC,YAAAA,QAFa;;AAAA,kBAGfA,QAAQ,GAAG,CAHI;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAKKC,OAAO,CAACC,GAAR,CAAY,CAChC,IAAIJ,gBAAJ,CAAS;AAAEK,cAAAA,IAAI,EAAE,eAAR;AAAyBC,cAAAA,WAAW,EAAE;AAAtC,aAAT,EAAyEC,IAAzE,EADgC,EAEhC,IAAIP,gBAAJ,CAAS;AAAEK,cAAAA,IAAI,EAAE,SAAR;AAAmBC,cAAAA,WAAW,EAAE;AAAhC,aAAT,EAA4DC,IAA5D,EAFgC,EAGhC,IAAIP,gBAAJ,CAAS;AAAEK,cAAAA,IAAI,EAAE,qBAAR;AAA+BC,cAAAA,WAAW,EAAE;AAA5C,aAAT,EAAoFC,IAApF,EAHgC,EAIhC,IAAIP,gBAAJ,CAAS;AAAEK,cAAAA,IAAI,EAAE,mBAAR;AAA6BC,cAAAA,WAAW,EAAE;AAA1C,aAAT,EAA0FC,IAA1F,EAJgC,CAAZ,CALL;;AAAA;AAKbC,YAAAA,SALa;AAWnBC,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,SAA9B;AAXmB;AAAA;;AAAA;AAAA;AAAA;AAanBC,YAAAA,OAAO,CAACE,KAAR;;AAbmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXZ,WAAW;AAAA;AAAA;AAAA,GAAjB;;;;AAiBA,IAAMa,eAAe;AAAA,4FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEDC,iBAAKZ,cAAL,EAFC;;AAAA;AAEjBa,YAAAA,OAFiB;;AAAA,kBAGnBA,OAAO,GAAG,CAHS;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAKCd,iBAAKe,OAAL,CAAa;AAAEV,cAAAA,IAAI,EAAE;AAAR,aAAb,CALD;;AAAA;AAKjBW,YAAAA,SALiB;AAAA,2BAOAb,OAPA;AAAA,2BAQfU,gBARe;AAAA;AAAA,mBAWCA,iBAAKI,eAAL,CAAqB,OAArB,CAXD;;AAAA;AAAA;AAAA,2BAeRD,SAAS,CAACE,GAfF;AAAA;AASfb,cAAAA,IATe,EAST,gBATS;AAUfc,cAAAA,QAVe,EAUL,SAVK;AAWfC,cAAAA,QAXe;AAYfC,cAAAA,KAZe,EAYR,2BAZQ;AAaff,cAAAA,WAbe,EAaF,uBAbE;AAcfgB,cAAAA,QAde,EAcL,aAdK;AAefC,cAAAA,KAfe;AAAA;AAAA,0DAgBhBhB,IAhBgB;AAAA;AAAA;AAAA,gCAOQH,GAPR;;AAAA;AAOjBoB,YAAAA,QAPiB;AAkBvBf,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bc,QAA/B;AAlBuB;AAAA;;AAAA;AAAA;AAAA;AAoBvBf,YAAAA,OAAO,CAACE,KAAR;;AApBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfC,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import Role from '../models/Role'\r\nimport User from '../models/User'\r\n\r\nexport const createRoles = async() => {\r\n    try {\r\n        const nroRoles = await Role.countDocuments();\r\n        if (nroRoles > 0) return;\r\n\r\n        const registros = await Promise.all([\r\n            new Role({ name: 'Administrador', description: 'Webmaster de Sistema' }).save(),\r\n            new Role({ name: 'Usuario', description: 'Usuario común' }).save(),\r\n            new Role({ name: 'Asistente-Marketing', description: 'Alimenta la base de datos' }).save(),\r\n            new Role({ name: 'Asistente-Digital', description: 'Gestiona leads para su conversión' }).save(),\r\n        ])\r\n        console.log('Roles creados:', registros)\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const createAdminUser = async() => {\r\n    try {\r\n        const nroUser = await User.countDocuments();\r\n        if (nroUser > 0) return;\r\n\r\n        const roleAdmin = await Role.findOne({ name: 'Administrador' });\r\n\r\n        const registro = await Promise.all([\r\n            new User({\r\n                name: 'Fernando Rojas',\r\n                username: 'frojasq',\r\n                password: await User.encryptPassword('admin'),\r\n                email: 'frojas@autonortnor.com.pe',\r\n                description: 'Webmaster del Sistema',\r\n                sucursal: 'Corporativo',\r\n                roles: roleAdmin._id\r\n            }).save()\r\n        ])\r\n        console.log('Usuario creado:', registro)\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}"],"file":"initialSetup.js"}