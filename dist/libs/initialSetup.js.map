{"version":3,"sources":["../../src/libs/initialSetup.js"],"names":["createRoles","Role","estimatedDocumentCount","nroRoles","Promise","all","name","description","status","save","registros","console","log","error","createAdminUser","User","nroUser","find","roleAdmin","idRol","map","a","_id","encryptPassword","username","password","email","sucursal","roles","registro"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEO,IAAMA,WAAW;AAAA,2FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEIC,iBAAKC,sBAAL,EAFJ;;AAAA;AAEbC,YAAAA,QAFa;;AAAA,kBAIfA,QAAQ,GAAG,CAJI;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAMKC,OAAO,CAACC,GAAR,CAAY,CAChC,IAAIJ,gBAAJ,CAAS;AAAEK,cAAAA,IAAI,EAAE,eAAR;AAAyBC,cAAAA,WAAW,EAAE,sBAAtC;AAA8DC,cAAAA,MAAM,EAAE;AAAtE,aAAT,EAAuFC,IAAvF,EADgC,EAEhC,IAAIR,gBAAJ,CAAS;AAAEK,cAAAA,IAAI,EAAE,SAAR;AAAmBC,cAAAA,WAAW,EAAE,eAAhC;AAAiDC,cAAAA,MAAM,EAAE;AAAzD,aAAT,EAA0EC,IAA1E,EAFgC,CAAZ,CANL;;AAAA;AAMbC,YAAAA,SANa;AAUnBC,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,SAA9B;AAVmB;AAAA;;AAAA;AAAA;AAAA;AAYnBC,YAAAA,OAAO,CAACE,KAAR;;AAZmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXb,WAAW;AAAA;AAAA;AAAA,GAAjB;;;;AAgBA,IAAMc,eAAe;AAAA,4FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEDC,iBAAKb,sBAAL,EAFC;;AAAA;AAEjBc,YAAAA,OAFiB;AAAA;AAAA,mBAKCf,iBAAKgB,IAAL,CAAU;AAAEX,cAAAA,IAAI,EAAE;AAAR,aAAV,CALD;;AAAA;AAKjBY,YAAAA,SALiB;AAMnBC,YAAAA,KANmB,GAMXD,SAAS,CAACE,GAAV,CAAc,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,GAAN;AAAA,aAAf,CANW;;AAAA,kBAQnBN,OAAO,GAAG,CARS;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,2BAUAZ,OAVA;AAAA,2BAWfW,gBAXe;AAAA;AAAA,mBAcCA,iBAAKQ,eAAL,CAAqB,OAArB,CAdD;;AAAA;AAAA;AAAA,2BAkBRJ,KAlBQ;AAAA;AAYfb,cAAAA,IAZe,EAYT,gBAZS;AAafkB,cAAAA,QAbe,EAaL,SAbK;AAcfC,cAAAA,QAde;AAefC,cAAAA,KAfe,EAeR,2BAfQ;AAgBfnB,cAAAA,WAhBe,EAgBF,uBAhBE;AAiBfoB,cAAAA,QAjBe,EAiBL,UAjBK;AAkBfC,cAAAA,KAlBe;AAAA;AAAA,0DAmBhBnB,IAnBgB;AAAA;AAAA;AAAA,gCAUQJ,GAVR;;AAAA;AAUjBwB,YAAAA,QAViB;AAqBvBlB,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BiB,QAA/B;AArBuB;AAAA;;AAAA;AAAA;AAAA;AAuBvBlB,YAAAA,OAAO,CAACE,KAAR;;AAvBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfC,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import Role from '../models/Role'\r\nimport User from '../models/User'\r\n\r\nexport const createRoles = async() => {\r\n    try {\r\n        const nroRoles = await Role.estimatedDocumentCount();\r\n        // console.log(nroRoles)\r\n        if (nroRoles > 0) return;\r\n\r\n        const registros = await Promise.all([\r\n            new Role({ name: 'Administrador', description: 'Webmaster de Sistema', status: true }).save(),\r\n            new Role({ name: 'Usuario', description: 'Usuario comÃºn', status: true }).save()\r\n        ])\r\n        console.log('Roles creados:', registros)\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const createAdminUser = async() => {\r\n    try {\r\n        const nroUser = await User.estimatedDocumentCount();\r\n        // console.log(nroUser)\r\n\r\n        const roleAdmin = await Role.find({ name: 'Administrador' })\r\n        let idRol = roleAdmin.map(a => a._id)\r\n\r\n        if (nroUser > 0) return;\r\n\r\n        const registro = await Promise.all([\r\n            new User({\r\n                name: 'Fernando Rojas',\r\n                username: 'frojasq',\r\n                password: await User.encryptPassword('admin'),\r\n                email: 'frojas@autonortnor.com.pe',\r\n                description: 'Webmaster del Sistema',\r\n                sucursal: 'Trujillo',\r\n                roles: idRol\r\n            }).save()\r\n        ])\r\n        console.log('Usuario creado:', registro)\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}"],"file":"initialSetup.js"}